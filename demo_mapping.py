#!/usr/bin/env python3
"""
Demonstration script for the new mapping functionality
Shows how to create interactive maps of the Athabasca Glacier with MODIS data
"""

def demo_mapping_functions():
    """
    Demonstrate the mapping functionality with examples
    Note: Requires Earth Engine authentication to run
    """
    
    print("üó∫Ô∏è DEMONSTRATION: Mapping Functions for Athabasca Glacier")
    print("=" * 65)
    print()
    
    try:
        # Import the mapping functions
        from mapping import show_glacier_map, create_comparison_map, display_glacier_info
        
        print("‚úÖ Mapping module imported successfully!")
        print()
        
        # Show glacier information
        print("üìç GLACIER INFORMATION:")
        print("-" * 30)
        glacier_info = display_glacier_info()
        print()
        
        # Demo 1: Single date map
        print("üó∫Ô∏è DEMO 1: Single Date Interactive Map")
        print("-" * 40)
        print("Creating map for August 15, 2023 at 500m resolution...")
        
        try:
            map1 = show_glacier_map(date='2023-08-15', scale=500)
            
            # Save the map
            map1.to_html('demo_glacier_map_single.html')
            print("‚úÖ Single date map created and saved as 'demo_glacier_map_single.html'")
            print("   This map shows:")
            print("   ‚Ä¢ Glacier boundary in red")
            print("   ‚Ä¢ MODIS 500m pixel grid in blue")
            print("   ‚Ä¢ Snow albedo data as colored overlay")
            print("   ‚Ä¢ Weather station location as yellow marker")
            
        except Exception as e:
            print(f"‚ùå Could not create single date map: {e}")
        
        print()
        
        # Demo 2: Comparison map
        print("üó∫Ô∏è DEMO 2: Side-by-Side Comparison Map")
        print("-" * 42)
        print("Creating comparison between June 15 and September 15, 2023...")
        
        try:
            map2 = create_comparison_map(
                date1='2023-06-15',  # Early melt season
                date2='2023-09-15',  # Late melt season
                scale=500
            )
            
            # Save the comparison map
            map2.to_html('demo_glacier_comparison.html')
            print("‚úÖ Comparison map created and saved as 'demo_glacier_comparison.html'")
            print("   This split-panel map shows:")
            print("   ‚Ä¢ Left: June 15, 2023 (early melt season)")
            print("   ‚Ä¢ Right: September 15, 2023 (late melt season)")
            print("   ‚Ä¢ Allows direct visual comparison of albedo changes")
            
        except Exception as e:
            print(f"‚ùå Could not create comparison map: {e}")
        
        print()
        
        # Usage instructions
        print("üí° USAGE INSTRUCTIONS:")
        print("-" * 25)
        print("1. Open the generated HTML files in your web browser")
        print("2. The maps are fully interactive - you can:")
        print("   ‚Ä¢ Zoom in/out with mouse wheel or controls")
        print("   ‚Ä¢ Pan by clicking and dragging")
        print("   ‚Ä¢ Toggle layers on/off using the layer control")
        print("   ‚Ä¢ Click on features for more information")
        print()
        print("3. Integration with main analysis:")
        print("   ‚Ä¢ Use interactive_menu() and select option 6 or 7")
        print("   ‚Ä¢ Or call functions directly:")
        print("     - show_glacier_map('2023-08-15', 500)")
        print("     - create_comparison_map('2023-06-15', '2023-09-15')")
        
        print()
        print("üéØ NEXT STEPS:")
        print("-" * 15)
        print("‚Ä¢ Run 'python main.py' and select mapping options from menu")
        print("‚Ä¢ Customize dates and resolution for your specific needs")
        print("‚Ä¢ Combine mapping with time series analysis for comprehensive studies")
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        print("Make sure you have installed the required packages:")
        print("pip install earthengine-api geemap folium")
        print()
        print("And authenticated with Google Earth Engine:")
        print("python -c 'import ee; ee.Authenticate()'")
        
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")

def show_mapping_features():
    """
    Display the features available in the mapping module
    """
    print("üîß MAPPING MODULE FEATURES:")
    print("=" * 35)
    print()
    print("üìç Core Functions:")
    print("  ‚Ä¢ show_glacier_map() - Single date interactive map")
    print("  ‚Ä¢ create_comparison_map() - Side-by-side date comparison")
    print("  ‚Ä¢ create_glacier_map() - Advanced map with custom options")
    print("  ‚Ä¢ display_glacier_info() - Glacier statistics and coordinates")
    print()
    print("üó∫Ô∏è Map Layers:")
    print("  ‚Ä¢ Glacier boundary (red outline)")
    print("  ‚Ä¢ MODIS pixel grid (blue grid)")
    print("  ‚Ä¢ Snow albedo data (color-coded)")
    print("  ‚Ä¢ Broadband albedo data (optional)")
    print("  ‚Ä¢ Weather station marker (yellow)")
    print()
    print("‚öôÔ∏è Customization Options:")
    print("  ‚Ä¢ Date selection for MODIS data")
    print("  ‚Ä¢ Resolution: 250m, 500m, or 1000m")
    print("  ‚Ä¢ Toggle data layers on/off")
    print("  ‚Ä¢ Multiple albedo products (snow vs broadband)")
    print()
    print("üíæ Export Options:")
    print("  ‚Ä¢ Interactive HTML maps")
    print("  ‚Ä¢ Glacier boundary as GeoJSON/KML")
    print("  ‚Ä¢ High-resolution screenshots")
    print()
    print("üéõÔ∏è Integration:")
    print("  ‚Ä¢ Available in main.py interactive menu")
    print("  ‚Ä¢ Standalone function calls")
    print("  ‚Ä¢ Jupyter notebook compatible")

if __name__ == "__main__":
    # Show features first
    show_mapping_features()
    print()
    print()
    
    # Ask user if they want to run the demo
    try:
        response = input("ü§î Do you want to run the mapping demonstration? (y/n): ").strip().lower()
        if response in ['y', 'yes', 'oui']:
            print()
            demo_mapping_functions()
        else:
            print("üëã Demo skipped. You can run this script anytime to test the mapping functions!")
    except KeyboardInterrupt:
        print("\nüëã Demo cancelled.")