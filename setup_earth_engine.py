"""
Configuration et authentification Google Earth Engine
pour l'analyse MODIS Albedo - Glacier Athabasca
"""

import ee

def setup_earth_engine():
    """
    Configurer Google Earth Engine pour la premi√®re fois
    """
    print("üåç CONFIGURATION GOOGLE EARTH ENGINE")
    print("="*50)
    
    try:
        # Tentative d'initialisation directe
        ee.Initialize()
        print("‚úÖ Earth Engine d√©j√† configur√© et pr√™t!")
        return True
        
    except Exception as e:
        print("‚ö†Ô∏è  Earth Engine non configur√©. Configuration requise...")
        print(f"Erreur: {e}")
        
        # Guide d'authentification
        print("\nüîß √âTAPES DE CONFIGURATION:")
        print("1Ô∏è‚É£ Authentification Google:")
        print("   Ex√©cutez: ee.Authenticate()")
        print("   Suivez les instructions dans le navigateur")
        print("")
        print("2Ô∏è‚É£ Initialisation:")
        print("   Ex√©cutez: ee.Initialize()")
        print("")
        print("3Ô∏è‚É£ Relancez votre script")
        
        # Tentative d'authentification automatique
        try:
            print("\nüîê Tentative d'authentification automatique...")
            ee.Authenticate()
            print("‚úÖ Authentification r√©ussie!")
            
            print("üîÑ Initialisation...")
            ee.Initialize()
            print("‚úÖ Earth Engine initialis√© avec succ√®s!")
            return True
            
        except Exception as auth_error:
            print(f"‚ùå Erreur d'authentification: {auth_error}")
            print("\nüìã INSTRUCTIONS MANUELLES:")
            print("Ouvrez un terminal Python et ex√©cutez:")
            print("```python")
            print("import ee")
            print("ee.Authenticate()  # Suivez les instructions")
            print("ee.Initialize()    # Confirmer l'initialisation")
            print("```")
            return False

def test_earth_engine():
    """
    Tester la configuration Earth Engine
    """
    print("\nüß™ TEST CONFIGURATION EARTH ENGINE")
    print("="*40)
    
    try:
        ee.Initialize()
        
        # Test simple - cr√©er une g√©om√©trie
        test_point = ee.Geometry.Point([-117.245, 52.214])
        print("‚úÖ Cr√©ation g√©om√©trie: OK")
        
        # Test collection MODIS
        modis_collection = ee.ImageCollection('MODIS/061/MOD10A1').limit(1)
        count = modis_collection.size().getInfo()
        print(f"‚úÖ Acc√®s collection MODIS: OK ({count} image test√©e)")
        
        # Test r√©gion Athabasca
        athabasca_test = ee.Geometry.Rectangle([-117.270, 52.198, -117.220, 52.230])
        print("‚úÖ R√©gion Athabasca: OK")
        
        print("\nüéâ Earth Engine configur√© correctement!")
        print("‚úÖ Vous pouvez maintenant ex√©cuter votre analyse MODIS")
        return True
        
    except Exception as e:
        print(f"‚ùå Test √©chou√©: {e}")
        return False

def quick_auth_fix():
    """
    Solution rapide pour l'authentification
    """
    print("üöÄ SOLUTION RAPIDE")
    print("="*30)
    print("Ex√©cutez ces commandes dans votre terminal Python:")
    print("")
    print(">>> import ee")
    print(">>> ee.Authenticate()")
    print(">>> ee.Initialize()")
    print("")
    print("Puis relancez votre script MODIS_Albedo+Athasbaca.py")

if __name__ == "__main__":
    print("üéØ CONFIGURATION EARTH ENGINE - GLACIER ATHABASCA")
    print("="*60)
    
    # Tentative de configuration
    success = setup_earth_engine()
    
    if success:
        # Test de la configuration
        test_success = test_earth_engine()
        
        if test_success:
            print("\n‚úÖ CONFIGURATION TERMIN√âE!")
            print("üèîÔ∏è Vous pouvez maintenant analyser le glacier Athabasca")
            print("\nPour lancer l'analyse:")
            print("python MODIS_Albedo+Athasbaca.py")
        else:
            quick_auth_fix()
    else:
        quick_auth_fix() 